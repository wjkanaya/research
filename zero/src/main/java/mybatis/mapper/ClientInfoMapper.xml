<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="mybatis.ClientInfoMapper">

  <insert id="insertClientInfo" useGeneratedKeys="true"    keyProperty="tblId">
    insert into &quot;public&quot;.&quot;client_info&quot;
    (&quot;client_id&quot;,&quot;client_name&quot;) values
    (#{clientId,jdbcType=VARCHAR},#{clientName,jdbcType=VARCHAR})
  </insert>

  <delete id="truncateClientInfo">
 	 truncate table &quot;public&quot;.&quot;client_info&quot;
	</delete>

  <delete id="cleanClientInfoTblId">
 	 select setval(&apos;client_info_tbl_id_seq&apos;, 1, false)
  </delete>

  <select id="selectClientEarningsInfo" resultType="hashmap">
    select client_info.client_id, sum(earnings_view.earnings) as sum_earnings,
      sum(earnings_view.biz_months) as sum_biz_months,
      sum(earnings_view.earnings) * 1.0 / sum(earnings_view.biz_months) as earmings_per_month
    from  project_info
      inner join  project_enrolled_hist_info
        on project_info.project_id = project_enrolled_hist_info.project_id
      inner join  earnings_view
        on earnings_view.enrolled_hist_id = project_enrolled_hist_info.enrolled_hist_id
            inner join  client_info
        on client_info.client_id = project_info.client_id
    group by  client_info.client_id
    order by sum_earnings desc
  </select>

 <select id="selectRetireClientEarningsInfo" resultType="hashmap">
    select * from (
    select ci1.client_id, sum(v1.earnings) as sum_earnings,
      sum(v1.biz_months) as sum_biz_months,
      sum(v1.earnings) * 1.0 / sum(v1.biz_months) as earmings_per_month
    from  project_info pi1
      inner join project_enrolled_hist_info ph1
        using (project_id)
      inner join earnings_view v1
        using (enrolled_hist_id)
      inner join client_info ci1
        using (client_id)
    group by ci1.client_id) t1
    inner  join
       (          select ci2.client_id, sum(v2.earnings) as r_sum_earnings,
      sum(v2.biz_months) as r_sum_biz_months,
      sum(v2.earnings) * 1.0  / sum(v2.biz_months) as r_earmings_per_month
    from  project_info pi2
      inner join project_enrolled_hist_info ph2
        using (project_id)
      inner join earnings_view v2
        using (enrolled_hist_id)
      inner join client_info ci2
        using (client_id)
    where v2.status = '1'
    group by ci2.client_id
    ) t2
     using (client_id)

  </select>


 <select id="selectGreyClientInfo" resultType="hashmap">

select
    *,
    t1.sum_earnings * 1.0 / r_count as earnings_per_r_count
from
    (
        select
            ci1.client_id,
            sum(v1.earnings) as sum_earnings,
            sum(v1.biz_months) as sum_biz_months,
            sum(v1.earnings) * 1.0 / sum(v1.biz_months) as earmings_per_month
        from
            project_info pi1
            inner join
                project_enrolled_hist_info ph1
            using
                (project_id)
            inner join
                earnings_view v1
            using
                (enrolled_hist_id)
            inner join
                client_info ci1
            using
                (client_id)
        group by
            ci1.client_id
    ) t1
    inner join
        (
            select
                ci2.client_id,
                count(distinct ph2.member_id) as r_count
            from
                project_info pi2
                inner join
                    project_enrolled_hist_info ph2
                using
                    (project_id)
                inner join
                    earnings_view v2
                using
                    (enrolled_hist_id)
                inner join
                    client_info ci2
                using
                    (client_id)
            where
                v2.status = '1'
            group by
                ci2.client_id

        ) t2
    using
        (client_id)
     where  r_count > 5
order by
    earnings_per_r_count offset 0
limit 25

  </select>

</mapper>
